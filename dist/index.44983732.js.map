{"mappings":"AAAA,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C;IAEA,yCAAyC;IACzC,SAAS,cAAc,CAAC,eAAe,gBAAgB,CAAC,SAAS;IAEjE,2DAA2D;IAC3D,MAAM,cAAc,SAAS,gBAAgB,CAAC;IAC9C,YAAY,OAAO,CAAC,CAAC,MAAM;QACvB,KAAK,gBAAgB,CAAC,SAAS,IAAM,UAAU;IACnD;AACJ;AAEA,6DAA6D;AAC7D,eAAe;IACX,IAAI;QAEA,MAAM,WAAW,MAAM,MAAM;QAC7B,wCAAwC;QACxC,MAAM,OAAO,MAAM,SAAS,IAAI;QAGhC,YAAY;IAChB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,wBAAwB;IAC1C;AACJ;AAEA,sDAAsD;AACtD,SAAS,YAAY,IAAI;IACrB,MAAM,YAAY,SAAS,cAAc,CAAC;IAC1C,UAAU,SAAS,GAAG;IAEtB,KAAK,OAAO,CAAC,CAAA;QACT,MAAM,MAAM,SAAS,aAAa,CAAC;QACnC,IAAI,SAAS,GAAG,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC;4BACf,EAAE,OAAO,UAAU,CAAC;4BACpB,EAAE,OAAO,WAAW,CAAC,KAAK,CAAC;QAC/C,UAAU,WAAW,CAAC;IAC1B;AACJ;AAEA,iEAAiE;AACjE,SAAS,UAAU,WAAW;IAC1B,MAAM,QAAQ,SAAS,cAAc,CAAC;IACtC,MAAM,OAAO,MAAM,IAAI,CAAC,SAAS,cAAc,CAAC,sBAAsB,gBAAgB,CAAC;IAEvF,KAAK,IAAI,CAAC,CAAC,GAAG;QACV,MAAM,QAAQ,EAAE,oBAAoB,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI;QACxE,MAAM,QAAQ,EAAE,oBAAoB,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI;QACxE,OAAO,MAAM,aAAa,CAAC;IAC/B;IAEA,MAAM,OAAO,CAAC,EAAE,CAAC,SAAS,GAAG;IAC7B,KAAK,OAAO,CAAC,CAAA,MAAO,MAAM,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC;AACrD;AAEA,yDAAyD;AACzD,SAAS;IACL,MAAM,QAAQ,SAAS,cAAc,CAAC,eAAe,KAAK,CAAC,WAAW;IACtE,MAAM,OAAO,SAAS,cAAc,CAAC,sBAAsB,gBAAgB,CAAC;IAE5E,KAAK,OAAO,CAAC,CAAA;QACT,MAAM,aAAa,IAAI,oBAAoB,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW;QAC5E,MAAM,aAAa,IAAI,oBAAoB,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW;QAE5E,IAAI,WAAW,QAAQ,CAAC,UAAU,WAAW,QAAQ,CAAC,QAClD,IAAI,KAAK,CAAC,OAAO,GAAG;aAEpB,IAAI,KAAK,CAAC,OAAO,GAAG;IAE5B;AACJ","sources":["src/script.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    fetchDataAndPopulateTable();\r\n\r\n    // Add event listener to the search input\r\n    document.getElementById('searchInput').addEventListener('input', filterTable);\r\n\r\n    // Add event listener to each table header cell for sorting\r\n    const headerCells = document.querySelectorAll('#frameworkTable th');\r\n    headerCells.forEach((cell, index) => {\r\n        cell.addEventListener('click', () => sortTable(index));\r\n    });\r\n});\r\n\r\n// Asynchronous function to fetch data and populate the table\r\nasync function fetchDataAndPopulateTable() {\r\n    try {\r\n        \r\n        const response = await fetch('https://dahlgren.miun.se/ramschema_ht23.php');\r\n        // Parse the JSON data from the response\r\n        const data = await response.json();\r\n\r\n        \r\n        renderTable(data);\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n}\r\n\r\n// Function to render the table with the provided data\r\nfunction renderTable(data) {\r\n    const tableBody = document.getElementById('frameworkTableBody');\r\n    tableBody.innerHTML = '';\r\n\r\n    data.forEach(course => {\r\n        const row = document.createElement('tr');\r\n        row.innerHTML = `<td>${course.code}</td>\r\n                        <td>${course.coursename}</td>\r\n                        <td>${course.progression}</td>`;\r\n        tableBody.appendChild(row);\r\n    });\r\n}\r\n\r\n// Function to sort the table based on the specified column index\r\nfunction sortTable(columnIndex) {\r\n    const table = document.getElementById('frameworkTable');\r\n    const rows = Array.from(document.getElementById('frameworkTableBody').querySelectorAll('tr'));\r\n    \r\n    rows.sort((a, b) => {\r\n        const cellA = a.getElementsByTagName('td')[columnIndex].textContent.trim();\r\n        const cellB = b.getElementsByTagName('td')[columnIndex].textContent.trim();\r\n        return cellA.localeCompare(cellB);\r\n    });\r\n\r\n    table.tBodies[0].innerHTML = '';\r\n    rows.forEach(row => table.tBodies[0].appendChild(row));\r\n}\r\n\r\n// Function to filter the table based on the search input\r\nfunction filterTable() {\r\n    const input = document.getElementById('searchInput').value.toLowerCase();\r\n    const rows = document.getElementById('frameworkTableBody').querySelectorAll('tr');\r\n\r\n    rows.forEach(row => {\r\n        const courseCode = row.getElementsByTagName('td')[0].textContent.toLowerCase();\r\n        const courseName = row.getElementsByTagName('td')[1].textContent.toLowerCase();\r\n\r\n        if (courseCode.includes(input) || courseName.includes(input)) {\r\n            row.style.display = '';\r\n        } else {\r\n            row.style.display = 'none';\r\n        }\r\n    });\r\n}\r\n"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}